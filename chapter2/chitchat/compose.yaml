services:
  app:
    build:
      context: .
      dockerfile: dockerfile/chitchat.dockerfile
    container_name: chitchat
    environment:
      DATABASE_URL: "host=db user=gocrazy password=mynameisAiden dbname=chitchat sslmode=disable"
      SECRET: h6gMObGzEfzni+clgCmHdI+TfCxJ1iJv+U8IF5QAYLo=
    ports:
      - "8080:8080"
    networks:
      - chitchat_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
  cache:
    image: redis:7.4-bookworm
    restart: always
    container_name: "chitchat_cache"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./dockerfile/redis.conf:/usr/local/etc/redis/redis.conf:rw,Z
    networks:
      - chitchat_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "MySecretPass", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
  db:
    image: postgres:17.4-bookworm
    restart: always
    container_name: "chitchat_database"
    volumes:
      - ./dockerfile/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:rw,Z
      - dbv:/var/lib/postgresql/data
    networks:
      - chitchat_network
    environment:
      POSTGRES_USER: gocrazy
      POSTGRES_PASSWORD: mynameisAiden
      POSTGRES_DB: chitchat
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gocrazy -d chitchat"]
      interval: 1s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    restart: always
    networks:
      - chitchat_network
    ports:
      - "8081:8080"

volumes:
  dbv:

networks:
  chitchat_network:
    driver: bridge
